<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	">
	
	<!-- 自动扫描机制 -->
	<context:component-scan base-package="com.*">
		<context:exclude-filter type="regex" expression="com.util.*"/>
	</context:component-scan>
	<mvc:annotation-driven />
	
	<!-- 管理静态资源 -->
	<mvc:resources mapping="/static/**" location="/static/" />
	<!-- 配置映射路径 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
	p:viewClass="org.springframework.web.servlet.view.JstlView" 
	p:prefix="/WEB-INF/views/"
	p:suffix=".jsp" />
	<!--  使用默认的Servlet来响应静态文件。 -->
 	<mvc:default-servlet-handler/>

 	<!-- 自动匹配URL -->
	<mvc:view-controller path="/" view-name="main"/><!-- 默认主页 -->
	 
 	<!-- 配置数据源 -->
 	<bean  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" p:location="classpath:system.properties"/>
	<!-- 数据库test1 -->
	 <bean id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		p:driverClassName="${static_driverClassName}"
		p:url="${static_url}"
		p:username="${static_username}"
		p:password="${static_password}"
		p:initialSize="${static_initialSize}"
		p:maxActive="${static_maxActive}"
		p:maxIdle="${static_maxIdle}"
		p:minIdle="${static_minIdle}"/>


	<!-- 配置jdbc模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource" />

	<!-- 数据库test1 -->
	 <bean id="dataSource1"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		p:driverClassName="${driverClassName}"
		p:url="${url}"
		p:username="${username}"
		p:password="${password}"
		p:initialSize="${initialSize}"
		p:maxActive="${maxActive}"
		p:maxIdle="${maxIdle}"
		p:minIdle="${minIdle}"/>
	 
	
	<!-- 配置jdbc模板 -->
	<bean id="jdbcTemplate1" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource1" />
	<!-- 配置日志jdbc模板 -->
	<bean id="gameLogJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource1" />

	<!-- 文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000"/>	
	</bean>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- 异常处理 -->
	<bean id="exceptionResolver" class="com.lgame.filter.AjaxExceptionFilter">
	</bean>

	<bean id="gateServerCache" class="com.lgame.manage.cache.GateServerCache" init-method="start" destroy-method="destroy" scope="singleton"/>
</beans>
